---
import site from "@data/site.json"
const { nav } = site

const pathname = new URL(Astro.request.url).pathname
---

<nav class="site-nav" id="main-navigation">
	<ul class="nav-list" role="list">
		{nav.map((i) => (
			<li>
				<a
					class='nav-link'
					aria-current={pathname === i.link ? "page" : undefined}
					href={i.link}
					rel={i.target ? "nofollow noopener" : null}
					target={i.target}>
					{i.name}
				</a>
			</li>
		))}
	</ul>
</nav>

<script>
	// variables
	const mainNav = document.querySelector("#main-navigation")
	const mainMenu = mainNav.querySelector("ul")

	// execution
	mainMenu &&
		mainMenu.addEventListener("keydown", (event) => {
			const currentMenuItem = event.target.closest("li")
			const menuItems = [...mainMenu.querySelectorAll("li")]
			const index = menuItems.findIndex((item) => item === currentMenuItem)

			const key = event.key
			let targetItem

			// move right on arrow right
			if (key === "ArrowRight") {
				// if it's the last item, go the first, else go to next
				if (menuItems.indexOf(currentMenuItem) === menuItems.length - 1) {
					targetItem = menuItems[0]
				} else {
					targetItem = menuItems[index + 1]
				}
			}

			// move left on arrow left
			if (key === "ArrowLeft") {
				// if it's the first item, go the last, else go to next
				if (menuItems.indexOf(currentMenuItem) === 0) {
					targetItem = menuItems[menuItems.length - 1]
				} else {
					targetItem = menuItems[index - 1]
				}
			}

			// escape to go back to first item
			if (key === "Escape") {
				targetItem = menuItems[0]
			}

			// set focus on target item
			if (targetItem) {
				targetItem.querySelector("a, button, input").focus()
			}
		})
</script>

<style>

	nav {
		display: none;
		@media (--md-n-above) {
			display: block;
		}
	}

	nav.show {
		display: block;
	}
	.nav-list {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr));
		/* gap: var(--size-1); */

		font-family: var(--font-heading);
	}

	.nav-link {
		text-decoration: none;
		display: block;
		padding: var(--size-2) var(--size-3);
		color: var(--muted);
		border-radius: var(--radius-rounded);
		margin: 0;
		font-weight: unset;
		&:hover,
		&:focus-visible {
			color: var(--text-1);
		}
		&[aria-current="page"] {
			/* background-color: var(--surface-0); */
			color: var(--text-1);
			font-weight: var(--font-weight-bold);
			cursor: default;
			
		}
	}
</style>
