---
import Button from "@components/Button.astro"
---
<Button className="btn btn-default" id="theme-toggle">Toggle Theme</Button>
<script type="module">
  let getSavedTheme = () => {
    const theme = window.localStorage.getItem("theme");
    // If the user has explicitly chosen light or dark,
    // let's use it. Otherwise, this value will be null.
    if (typeof theme === "string") return theme;

    // If they are using a browser/OS that doesn't support
    // color themes, let's not do anything.
    return null;
  };

  let saveTheme = (theme) => {
    // If the user has explicitly chosen light or dark, store the default theme
    if (typeof theme === "string") window.localStorage.setItem("theme", theme);
  };

  let mediaTheme = () => {
    // If they haven't been explicitly set, let's check the media query
    const mql = matchMedia("(prefers-color-scheme: light)");
    const hasMediaQueryPreference = typeof mql.matches === "boolean";
    if (hasMediaQueryPreference) return mql.matches ? "light" : "dark";
  };

  const html = document.querySelector("html");

  // Get theme from html tag, if it has a theme or get it from localStorage
  let checkCurrentTheme = () => {
    let themeAttr = html.getAttribute("color-scheme");
    if (themeAttr) return themeAttr;

    return getSavedTheme();
  };

  // Set theme in localStorage, as well as in the html tag
  let applyTheme = (theme) => {
    // html.className = theme;
    html.setAttribute("color-scheme", theme);
  };

  try {
    let theme = getSavedTheme();
    if (theme == null) theme = mediaTheme();
    html.setAttribute("color-scheme", theme);
    // html.classList.add(theme);

    // If a user changes overall system theme, update site theme as well,
    // but don't save the change in local storage
    window
      .matchMedia("(prefers-color-scheme: light)")
      .addEventListener("change", (e) => {
        applyTheme(e.matches ? "light" : "dark");
      });

    // On theme switcher button click toggle the theme between dark and light mode
    document.querySelector("#theme-toggle").addEventListener("click", () => {
      let theme = checkCurrentTheme() === "light" ? "dark" : "light";
      applyTheme(theme);
      saveTheme(theme);
    });
  } catch (e) {
    console.warn("Theming isn't available on this browser.", e);
  }
</script>
