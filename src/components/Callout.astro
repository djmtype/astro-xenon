---
import { Icon } from "astro-icon";

export interface Props {
	className: string;
	type?: string;
	title?: string;
	icon?: any;
}

const { className, title, type, icon } = Astro.props;
---

<div class={`callout ${className ? className : ""}`} data-type={type}>

	{type === "info" ? <Icon name="ri:information-line" width={48} class="callout-icon" /> : ''}

	{type === "warning" ? <Icon name="ri:error-warning-line" width={48} class="callout-icon" /> : ''}

	{type === "yield" ? <Icon name="ri:alert-line" width={48} class="callout-icon" /> : ''}

	{type === "success" ? <Icon name="ri:checkbox-circle-line" width={48} class="callout-icon" /> : ''}

	{icon && type == null ? <Icon name={icon} width={48} class="callout-icon" /> : ''}
	
	<div class="callout-content">
		{title ? (
			<p class="callout-title">{title}</p>
			) : null }
		<slot />
	</div>
</div>

<style is:global>
.callout {
	color: var(--muted);
	background: var(--surface-0);
	border-left: var(--border-size-3) solid currentColor;
	padding: var(--gutter);
	display: flex;
	column-gap: var(--gutter);
	align-items: center;

}

.callout-icon {
	width: min(20%, 2.5rem);
	height: auto;
}

.callout-content {
	flex: 1;
}

.callout p {
 color: var(--text-1);
}

[data-type="warning"] {
	color: var(--accent-red);
	border-color: currentColor;
	
}

[data-type="yeild"] {
	color: var(--accent-yellow);
	border-color: currentColor;
	
}

[data-type="info"] {
	color: var(--accent-blue);
	border-color: currentColor;
}

[data-type="success"] {
	color: var(--accent-green);
	border-color: currentColor;
	
}

.callout-title {
	font-size: var(--font-size-2);
	font-weight: var(--font-weight-bold);
}



</style>