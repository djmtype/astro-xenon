---
// import { Picture } from "astro-imagetools/components";
import { Picture } from '@astrojs/image/components';
import Label from "./Label.astro";


export interface Props {
  url: string;
  title: string;
  image?: string;
  loading?: string;
  alt: string;
  label: string;
  datePublished?: string;
}

const { url, title, image, alt, label, loading } = Astro.props;
---

<div class={image ? "tile tile-has-img" : "tile"}>
  <figure class="tile-thumb">

    <Picture src={image} alt={alt ? `${alt}` : ` `} widths={[200, 400, 800]} aspectRatio="4:3" sizes="(max-width: 800px) 100vw, 800px" />

    <!-- <img src={image} alt={alt ? `${alt}` : ` `} loading={loading}/> -->

      <!-- <Picture src={image} loading={loading} layout="fill" alt={alt ? `${alt}` : ` `} quality={60}  breakpoints={{ count: 4, minWidth: 480, maxWidth: 800 }} /> -->
  </figure>
  <div class="tile-content">
    <h2 class="tile-title">
      <a href={url} class="tile-link link-block">{title}</a>
    </h2>
  </div>

  <Label className="label-overlay" name={label} />
 
</div>

<style>
  .tile {
    /* border-radius: var(--radius-rounded); */
    overflow: hidden;
    position: relative;
    z-index: var(--layer-0);
    min-height: var(--size-span-fluid);
    display: grid;
    grid-template-rows: 1fr min-content;
    padding: var(--size-4);
  }

  .tile .label {
    grid-row: 1;
    justify-self: end;
    align-self: start;
  }

  .tile-thumb {
    z-index: var(--layer-00);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .tile-thumb::after {
    content: "";
    position: absolute;
    z-index: var(--layer-1);
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;

    background-image: linear-gradient(
      45deg,
      var(--brand) 0%,
      hsl(0 0% 0% / 0) 35%,
      hsl(0 0% 0% / 0) 65%,
      var(--brand-2) 100%
    );
  }

  :global(.tile-thumb img),
  .tile-img {
    /* filter: grayscale(0) contrast(1); */
    /* mix-blend-mode: lighten; */
    object-fit: cover;
    width: 100%;
    height: 100%;
  }

  .tile-title {
    font-size: var(--font-size-3);
    line-height: calc(var(--font-lineheight-3) * var(--size-5));
  }

  .tile-title a {
    text-decoration: none;
    font-weight: var(--font-weight-5);
    background: linear-gradient(
      to right,
      var(--brand) 50%,
      var(--surface-1) 50%
    );

    box-decoration-break: clone;
    padding: var(--size-1) var(--size-2);
    background-size: 200% 100%;
    background-repeat: no-repeat;
    background-position: 100% 100%;
    transition: background-position 0.3s;


  }

  @media (--mouse) {
  .tile-title a {
    &:hover,
    &:focus {
      color: var(--surface-0);
      background-position: 0% 100%;
    } 
  }
}

  .tile-content {
    align-self: end;
  }




  @media (--motionOK) {
    .tile {
      transition: 250ms ease transform, 250ms ease box-shadow;
      transform: scale(1);
      box-shadow: var(--shadow-2);
    }
    .tile-thumb {
      /* opacity: 0.7; */
      transition: 400ms ease opacity;
    }
    .tile:hover,
    .tile:focus-within {
      transform: scale(1.025);
      box-shadow: var(--shadow-3);
    }
    .tile:active {
      transform: scale(1);
      box-shadow: var(--box-shadow-0);
    }
    .tile:hover .tile-thumb, .tile:focus-within .tile-thumb {
      opacity: 1.0;
    }

    .tile:hover .label-overlay, .tile:focus-within .label-overlay {
      /* mix-blend-mode: unset; */
      opacity: 1;
    }
  }


</style>
