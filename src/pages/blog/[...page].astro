---
import DefaultLayout from "@layouts/DefaultLayout.astro"
import PageLayout from "@layouts/PageLayout.astro"

import Pagination from "@components/Pagination.astro"
import PostItem from "@components/PostItem.astro"
import site from "@data/site.json"

export async function getStaticPaths({ paginate }) {
	const allPosts = await Astro.glob("./*.md")
	const sortedPosts = allPosts.sort(
		(a, b) =>
			new Date(b.frontmatter.date.published).valueOf() -
			new Date(a.frontmatter.date.published).valueOf()
	)

	// Return a paginated collection of paths for all posts
	return paginate(sortedPosts, { pageSize: site.blogPaginationSize || 10 })
}

let title = "Blog"
let description = "Posts for Xenon"
// let canonicalURL = Astro.url;

const { canonicalURL } = Astro
const { page } = Astro.props
---

<DefaultLayout {title} {description} {canonicalURL}>
<PageLayout title={title}>
			<div class="post-list margin-top-xl">
				{page.data.map((post) => (
					<PostItem
						url={post.url}
						title={post.frontmatter.title}
						datePublished={post.frontmatter.date.published}
						image={post.frontmatter.image.path}
						alt={post.frontmatter.image.alt}
						label={post.frontmatter.category}
						description={post.frontmatter.description}
					/>
				))}
			</div>
			<footer slot="main-footer" class="main-footer margin-top-2xl">
				<Pagination
				prevUrl={page.url.prev}
				nextUrl={page.url.next}
				currentPage={page.currentPage}
				totalPages={page.lastPage}
			/>
		 </footer>
</PageLayout>

	

</DefaultLayout>

<style>
	
	.main-footer {
		max-width: calc(var(--size-span-sm) + var(--gutter));
	}

	.post-list {
		display: flex;
		flex-direction: column;
		row-gap: var(--gutter);
	}

	:global(.post-list > *::after) {
		content: "";
		width: 100%;
		border-bottom: var(--border-size-1) solid var(--separator-surface);
		display: block;
		grid-column: span 2;
		position: relative;
		left: 0;
		bottom: 0;
	}
</style>
